Net(
  (layer_01): Linear(in_features=3072, out_features=1000, bias=True)
  (dropout_layer): Dropout(p=0.5)
  (output_layer): Linear(in_features=1000, out_features=10, bias=True)
)

Hidden Layer sizes: [(900, 300), (1000,), (1500,)]
Total network weights + biases: 3083010
Epochs: 50
Learning rate: 0.005
Optimizer: Adagrad (
Parameter Group 0
    initial_accumulator_value: 0
    lr: 0.005
    lr_decay: 0
    weight_decay: 0
)
Transfer Function: <class 'torch.nn.modules.activation.LeakyReLU'>
Batch Size: 32
Final loss: 1.0495
Run device: cuda
Training run duration (secs): 477.6

Accuracy of the network on the 10000 test images: 56.7%

Accuracy of airplane   : 64.2%
Accuracy of automobile : 65.2%
Accuracy of bird       : 41.1%
Accuracy of cat        : 37.1%
Accuracy of deer       : 51.9%
Accuracy of dog        : 46.2%
Accuracy of frog       : 66.1%
Accuracy of horse      : 63.2%
Accuracy of ship       : 69.5%
Accuracy of truck      : 62.4%
