Net(
  (layer_01): Linear(in_features=3072, out_features=1000, bias=True)
  (dropout_layer): Dropout(p=0.2)
  (output_layer): Linear(in_features=1000, out_features=10, bias=True)
)

Hidden Layer sizes: [(1000,)]
Total network weights + biases: 3083010
Epochs: 2
Learning rate: 0.005
Optimizer: Adagrad (
Parameter Group 0
    initial_accumulator_value: 0
    lr: 0.005
    lr_decay: 0
    weight_decay: 0
)
Transfer Function: <class 'torch.nn.modules.activation.Tanh'>
Batch Size: 250
Final loss: 1.5967
Run device: cpu
Training run duration (secs): 36.3

Accuracy of the network on the 10000 test images: 45.3%

Accuracy of airplane   : 50.6%
Accuracy of automobile : 53.2%
Accuracy of bird       : 27.7%
Accuracy of cat        : 28.5%
Accuracy of deer       : 30.8%
Accuracy of dog        : 33.1%
Accuracy of frog       : 61.4%
Accuracy of horse      : 49.7%
Accuracy of ship       : 66.2%
Accuracy of truck      : 51.7%
