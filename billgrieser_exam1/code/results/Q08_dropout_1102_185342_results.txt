Net(
  (layer_01): Linear(in_features=3072, out_features=900, bias=True)
  (layer_02): Linear(in_features=900, out_features=300, bias=True)
  (dropout_layer): Dropout(p=0.5)
  (output_layer): Linear(in_features=300, out_features=10, bias=True)
)

Hidden Layer sizes: [(900, 300), (1000,), (1500,)]
Total network weights + biases: 3039010
Epochs: 50
Learning rate: 0.005
Optimizer: Adagrad (
Parameter Group 0
    initial_accumulator_value: 0
    lr: 0.005
    lr_decay: 0
    weight_decay: 0
)
Transfer Function: <class 'torch.nn.modules.activation.LeakyReLU'>
Batch Size: 32
Final loss: 0.2220
Run device: cuda
Training run duration (secs): 496.9

Accuracy of the network on the 10000 test images: 56.4%

Accuracy of airplane   : 68.4%
Accuracy of automobile : 61.9%
Accuracy of bird       : 44.0%
Accuracy of cat        : 39.3%
Accuracy of deer       : 49.1%
Accuracy of dog        : 44.9%
Accuracy of frog       : 64.2%
Accuracy of horse      : 61.8%
Accuracy of ship       : 68.6%
Accuracy of truck      : 61.9%
